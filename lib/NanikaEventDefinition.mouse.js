// Generated by CoffeeScript 1.8.0

/* (C) 2014 Narazaka : Licensed under The MIT License - http://narazaka.net/license/MIT?2014 */

(function() {
  var NanikaEventDefinition, event, mouseevents, mouseevents_header, _i, _len;

  NanikaEventDefinition = this.NanikaEventDefinition;

  if (NanikaEventDefinition == null) {
    NanikaEventDefinition = {};
  }

  mouseevents = [
    {
      type: 'mousedown',
      id: 'OnMouseDown'
    }, {
      type: 'mousedownex',
      id: 'OnMouseDownEx'
    }, {
      type: 'mouseup',
      id: 'OnMouseUp'
    }, {
      type: 'mouseupex',
      id: 'OnMouseUpEx'
    }, {
      type: 'mouseclick',
      id: 'OnMouseClick'
    }, {
      type: 'mouseclickex',
      id: 'OnMouseClickEx'
    }, {
      type: 'mousedblclick',
      id: 'OnMouseDoubleClick'
    }, {
      type: 'mousedblclickex',
      id: 'OnMouseDoubleClickEx'
    }, {
      type: 'mousedragstart',
      id: 'OnMouseDragStart'
    }, {
      type: 'mousedragend',
      id: 'OnMouseDragEnd'
    }, {
      type: 'mousewheel',
      id: 'OnMouseWheel'
    }, {
      type: 'mousemove',
      id: 'OnMouseMove'
    }, {
      type: 'mousehover',
      id: 'OnMouseHover'
    }, {
      type: 'mouseenterall',
      id: 'OnMouseEnterAll'
    }, {
      type: 'mouseleaveall',
      id: 'OnMouseLeaveAll'
    }, {
      type: 'mouseenter',
      id: 'OnMouseEnter'
    }, {
      type: 'mouseleave',
      id: 'OnMouseLeave'
    }
  ];

  mouseevents_header = {
    offsetX: 0,
    offsetY: 1,
    wheel: 2,
    scope: 3,
    region: 4,
    button: 5,
    type: 6
  };

  for (_i = 0, _len = mouseevents.length; _i < _len; _i++) {
    event = mouseevents[_i];
    NanikaEventDefinition[event.type] = {
      request: {
        id: event.id,
        headers: mouseevents_header
      }
    };
  }

  this.NanikaEventDefinition = NanikaEventDefinition;

}).call(this);
